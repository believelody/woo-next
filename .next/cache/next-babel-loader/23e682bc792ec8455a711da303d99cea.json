{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/yamakasi/nextjs/woo-next/components/cart/AddToCartBtn.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useAppHooks } from \"../../context/AppContext\";\nimport { createCart, productInCart, updateCartByIndex, updateCartWithNewProduct } from \"../../utils/cart.util\";\n\nvar AddToCartBtn = function AddToCartBtn(_ref) {\n  _s();\n\n  var product = _ref.product,\n      variationValue = _ref.variationValue,\n      quantity = _ref.quantity,\n      setQuantity = _ref.setQuantity,\n      setVariationValue = _ref.setVariationValue;\n\n  var _useAppHooks = useAppHooks(),\n      _useAppHooks$useCart = _slicedToArray(_useAppHooks.useCart, 2),\n      cart = _useAppHooks$useCart[0],\n      setCart = _useAppHooks$useCart[1],\n      _useAppHooks$useToast = _slicedToArray(_useAppHooks.useToast, 2),\n      toast = _useAppHooks$useToast[0],\n      setToast = _useAppHooks$useToast[1];\n\n  var updateBtnColor = function updateBtnColor() {\n    if (variationValue && quantity > 0) {\n      var indexProductFound = cart && productInCart(cart, product, variationValue);\n      return cart && cart.items[indexProductFound] ? \"primary\" : \"success\";\n    }\n\n    return \"dark\";\n  };\n\n  var updateBtnText = function updateBtnText() {\n    if (variationValue && quantity > 0) {\n      var indexProductFound = cart && productInCart(cart, product, variationValue);\n      return cart.items[indexProductFound] ? \"UPDATE PRODUCT\" : \"ADD TO CART\";\n    }\n\n    return \"CHOOSE A VARIATION\";\n  };\n\n  var handleAddToCart = function handleAddToCart() {\n    if (cart) {\n      var updatedCart;\n      var indexProduct = productInCart(cart, product, variationValue);\n\n      if (indexProduct > -1) {\n        if (cart.items[indexProduct].quantity === quantity) {\n          setToast({\n            title: \"Notification\",\n            body: \"Please select another quantity\",\n            role: \"primary\"\n          });\n        } else {\n          updatedCart = updateCartByIndex(cart, indexProduct, quantity, variationValue);\n          setToast({\n            title: \"Notification\",\n            body: \"You successfully updated \".concat(product.name, \" variation to \").concat(variationValue),\n            role: \"success\"\n          });\n        }\n      } else {\n        updatedCart = updateCartWithNewProduct(cart, product, quantity, variationValue);\n        setToast({\n          title: \"Notification\",\n          body: \"You successfully added \".concat(product.name, \"-\").concat(variationValue, \" in your cart\"),\n          role: \"success\"\n        });\n      }\n\n      setCart(updatedCart);\n    } else {\n      var newCart = createCart(product, quantity, variationValue);\n      setCart(newCart);\n      setToast({\n        title: \"Notification\",\n        body: \"You successfully added \".concat(product.name, \"-\").concat(variationValue, \" in your cart\"),\n        role: \"success\"\n      });\n    }\n\n    setQuantity(0);\n    setVariationValue(\"\");\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"button\", {\n    disabled: !variationValue || quantity === 0,\n    className: \"btn btn-\".concat(updateBtnColor(), \" w-100 block\"),\n    onClick: handleAddToCart,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, updateBtnText()));\n};\n\n_s(AddToCartBtn, \"eWZawIN+5jBVOZ+i+SiTcJc9MCA=\", false, function () {\n  return [useAppHooks];\n});\n\n_c = AddToCartBtn;\nexport default AddToCartBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddToCartBtn\");","map":{"version":3,"sources":["/home/yamakasi/nextjs/woo-next/components/cart/AddToCartBtn.js"],"names":["useAppHooks","createCart","productInCart","updateCartByIndex","updateCartWithNewProduct","AddToCartBtn","product","variationValue","quantity","setQuantity","setVariationValue","useCart","cart","setCart","useToast","toast","setToast","updateBtnColor","indexProductFound","items","updateBtnText","handleAddToCart","updatedCart","indexProduct","title","body","role","name","newCart"],"mappings":"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","sourcesContent":["import { useAppHooks } from \"../../context/AppContext\"\nimport { createCart, productInCart, updateCartByIndex, updateCartWithNewProduct } from \"../../utils/cart.util\"\n\nconst AddToCartBtn = ({ product, variationValue, quantity, setQuantity, setVariationValue }) => {\n    const {\n        useCart: [cart, setCart],\n        useToast: [toast, setToast]\n    } = useAppHooks()\n\n    const updateBtnColor = () => {\n        if (variationValue && quantity > 0) {\n            let indexProductFound = cart && productInCart(cart, product, variationValue)\n            return cart && cart.items[indexProductFound] ? \"primary\" : \"success\"\n        }\n        return \"dark\"\n    }\n\n    const updateBtnText = () => {\n        if (variationValue && quantity > 0) {\n            let indexProductFound = cart && productInCart(cart, product, variationValue)\n            return cart.items[indexProductFound] ? \"UPDATE PRODUCT\" : \"ADD TO CART\"\n        }\n        return \"CHOOSE A VARIATION\"\n    }\n\n    const handleAddToCart = () => {\n        if (cart) {\n            let updatedCart\n            const indexProduct = productInCart(cart, product, variationValue)\n            if (indexProduct > -1) {\n                if (cart.items[indexProduct].quantity === quantity) {\n                    setToast({\n                        title: \"Notification\",\n                        body: \"Please select another quantity\",\n                        role: \"primary\"\n                    })\n                }\n                else {\n                    updatedCart = updateCartByIndex(cart, indexProduct, quantity, variationValue)\n                    setToast({\n                        title: \"Notification\",\n                        body: `You successfully updated ${product.name} variation to ${variationValue}`,\n                        role: \"success\"\n                    })\n                }\n            }\n            else {\n                updatedCart = updateCartWithNewProduct(cart, product, quantity, variationValue)\n                setToast({\n                    title: \"Notification\",\n                    body: `You successfully added ${product.name}-${variationValue} in your cart`,\n                    role: \"success\"\n                })\n            }\n            setCart(updatedCart)\n        }\n        else {\n            const newCart = createCart(product, quantity, variationValue)\n            setCart(newCart)\n            setToast({\n                title: \"Notification\",\n                body: `You successfully added ${product.name}-${variationValue} in your cart`,\n                role: \"success\"\n            })\n        }\n        setQuantity(0)\n        setVariationValue(\"\")\n    }\n\n  return (\n      <>\n        <button\n            disabled={!variationValue || quantity === 0}\n            className={`btn btn-${updateBtnColor()} w-100 block`}\n            onClick={handleAddToCart}\n        >\n              {updateBtnText()}\n        </button>\n      </>\n  )\n}\n\nexport default AddToCartBtn"]},"metadata":{},"sourceType":"module"}
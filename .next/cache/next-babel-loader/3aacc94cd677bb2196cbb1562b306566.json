{"ast":null,"code":"export const createCart = (product, quantity, variationValue) => {\n  let rawPrice = parseFloat(product.price.replace(\",\", \".\").substring(1));\n  let indexVariation = product.variations.nodes.findIndex(variation => variation.attributes.nodes[0].value === variationValue);\n\n  if (indexVariation > -1) {\n    return [{\n      quantity,\n      totalPrice: (quantity * rawPrice).toFixed(2),\n      variation: variationValue,\n      productVariation: product\n    }];\n  }\n\n  return null;\n};\nexport const updateCart = (cart, product, quantity, variationValue) => {\n  console.log(product);\n  const isProductMatchIndex = cart.findIndex(item => item.productVariation.id === product.id);\n  const isVariationMatch = isProductMatchIndex > -1 && cart[isProductMatchIndex].variation === variationValue;\n  let rawPrice = parseFloat(product.price.replace(\",\", \".\").substring(1));\n\n  if (isVariationMatch) {\n    cart[isProductMatchIndex].quantity += quantity;\n    return cart;\n  } else {\n    return [...cart, {\n      quantity,\n      totalPrice: (quantity * rawPrice).toFixed(2),\n      productVariation: product,\n      variation: variationValue\n    }];\n  }\n};","map":{"version":3,"sources":["/home/yamakasi/nextjs/woo-next/utils/cart.util.js"],"names":["createCart","product","quantity","variationValue","rawPrice","parseFloat","price","replace","substring","indexVariation","variations","nodes","findIndex","variation","attributes","value","totalPrice","toFixed","productVariation","updateCart","cart","console","log","isProductMatchIndex","item","id","isVariationMatch"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,CAACC,OAAD,EAAUC,QAAV,EAAoBC,cAApB,KAAuC;AAC7D,MAAIC,QAAQ,GAAGC,UAAU,CAACJ,OAAO,CAACK,KAAR,CAAcC,OAAd,CAAsB,GAAtB,EAA2B,GAA3B,EAAgCC,SAAhC,CAA0C,CAA1C,CAAD,CAAzB;AACA,MAAIC,cAAc,GAAGR,OAAO,CAACS,UAAR,CAAmBC,KAAnB,CAAyBC,SAAzB,CAAmCC,SAAS,IAAIA,SAAS,CAACC,UAAV,CAAqBH,KAArB,CAA2B,CAA3B,EAA8BI,KAA9B,KAAwCZ,cAAxF,CAArB;;AACA,MAAIM,cAAc,GAAG,CAAC,CAAtB,EAAyB;AACrB,WAAO,CACH;AACIP,MAAAA,QADJ;AAEIc,MAAAA,UAAU,EAAE,CAACd,QAAQ,GAAGE,QAAZ,EAAsBa,OAAtB,CAA8B,CAA9B,CAFhB;AAGIJ,MAAAA,SAAS,EAAEV,cAHf;AAIIe,MAAAA,gBAAgB,EAAEjB;AAJtB,KADG,CAAP;AAQH;;AACD,SAAO,IAAP;AACH,CAdM;AAgBP,OAAO,MAAMkB,UAAU,GAAG,CAACC,IAAD,EAAOnB,OAAP,EAAgBC,QAAhB,EAA0BC,cAA1B,KAA6C;AACnEkB,EAAAA,OAAO,CAACC,GAAR,CAAYrB,OAAZ;AACA,QAAMsB,mBAAmB,GAAGH,IAAI,CAACR,SAAL,CAAeY,IAAI,IAAIA,IAAI,CAACN,gBAAL,CAAsBO,EAAtB,KAA6BxB,OAAO,CAACwB,EAA5D,CAA5B;AACA,QAAMC,gBAAgB,GAAGH,mBAAmB,GAAG,CAAC,CAAvB,IAA4BH,IAAI,CAACG,mBAAD,CAAJ,CAA0BV,SAA1B,KAAwCV,cAA7F;AAEA,MAAIC,QAAQ,GAAGC,UAAU,CAACJ,OAAO,CAACK,KAAR,CAAcC,OAAd,CAAsB,GAAtB,EAA2B,GAA3B,EAAgCC,SAAhC,CAA0C,CAA1C,CAAD,CAAzB;;AACA,MAAIkB,gBAAJ,EAAsB;AAClBN,IAAAA,IAAI,CAACG,mBAAD,CAAJ,CAA0BrB,QAA1B,IAAsCA,QAAtC;AACA,WAAOkB,IAAP;AACH,GAHD,MAIK;AACD,WAAO,CACH,GAAGA,IADA,EAEH;AACIlB,MAAAA,QADJ;AAEIc,MAAAA,UAAU,EAAE,CAACd,QAAQ,GAAGE,QAAZ,EAAsBa,OAAtB,CAA8B,CAA9B,CAFhB;AAGIC,MAAAA,gBAAgB,EAAEjB,OAHtB;AAIIY,MAAAA,SAAS,EAAEV;AAJf,KAFG,CAAP;AASH;AACJ,CArBM","sourcesContent":["export const createCart = (product, quantity, variationValue) => {\n    let rawPrice = parseFloat(product.price.replace(\",\", \".\").substring(1))\n    let indexVariation = product.variations.nodes.findIndex(variation => variation.attributes.nodes[0].value === variationValue)\n    if (indexVariation > -1) {\n        return [\n            {\n                quantity,\n                totalPrice: (quantity * rawPrice).toFixed(2),\n                variation: variationValue,\n                productVariation: product\n            }\n        ]\n    }\n    return null\n}\n\nexport const updateCart = (cart, product, quantity, variationValue) => {\n    console.log(product)\n    const isProductMatchIndex = cart.findIndex(item => item.productVariation.id === product.id)\n    const isVariationMatch = isProductMatchIndex > -1 && cart[isProductMatchIndex].variation === variationValue\n    \n    let rawPrice = parseFloat(product.price.replace(\",\", \".\").substring(1))\n    if (isVariationMatch) {\n        cart[isProductMatchIndex].quantity += quantity\n        return cart\n    }\n    else {\n        return [\n            ...cart,\n            {\n                quantity,\n                totalPrice: (quantity * rawPrice).toFixed(2),\n                productVariation: product,\n                variation: variationValue\n            }\n        ]\n    }\n}"]},"metadata":{},"sourceType":"module"}
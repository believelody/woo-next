{"ast":null,"code":"var _jsxFileName = \"/home/yamakasi/nextjs/woo-next/context/AppContext.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport useCart from '../hooks/useCart';\nimport { getCart } from '../utils/cart.util';\nimport { compare2Obj } from '../utils/obj.util';\nexport const AppContext = /*#__PURE__*/React.createContext([null, () => {}]);\nexport const AppProvider = props => {\n  const {\n    0: cart,\n    1: setCart\n  } = useState(null);\n  useEffect(() => {\n    if (getCart() && !compare2Obj(cart, getCart())) {\n      setCart(getCart());\n    }\n  }, []);\n  return __jsx(AppContext.Provider, {\n    value: [cart, setCart],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, props.children);\n};","map":{"version":3,"sources":["/home/yamakasi/nextjs/woo-next/context/AppContext.js"],"names":["React","useState","useEffect","useCart","getCart","compare2Obj","AppContext","createContext","AppProvider","props","cart","setCart","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,OAAO,MAAMC,UAAU,gBAAGN,KAAK,CAACO,aAAN,CAAoB,CAC1C,IAD0C,EAE1C,MAAM,CAAE,CAFkC,CAApB,CAAnB;AAKP,OAAO,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAChC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIE,OAAO,MAAM,CAACC,WAAW,CAACK,IAAD,EAAON,OAAO,EAAd,CAA7B,EAAgD;AAC5CO,MAAAA,OAAO,CAACP,OAAO,EAAR,CAAP;AACH;AACJ,GAJQ,EAIN,EAJM,CAAT;AAMA,SACI,MAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE,CAACM,IAAD,EAAOC,OAAP,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACG,QADX,CADJ;AAKH,CAdM","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport useCart from '../hooks/useCart'\nimport { getCart } from '../utils/cart.util'\nimport { compare2Obj } from '../utils/obj.util'\n\nexport const AppContext = React.createContext([\n    null,\n    () => {}\n])\n\nexport const AppProvider = props => {\n    const [cart, setCart] = useState(null)\n\n    useEffect(() => {\n        if (getCart() && !compare2Obj(cart, getCart())) {\n            setCart(getCart())\n        }\n    }, [])\n\n    return (\n        <AppContext.Provider value={[cart, setCart]}>\n            {props.children}\n        </AppContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}
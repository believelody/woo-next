{"ast":null,"code":"var _jsxFileName = \"/home/yamakasi/nextjs/woo-next/components/cart/CartItem.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport { useAppHooks } from '../../context/AppContext';\nimport { updateCartByIndex, removeItemFromCart } from '../../utils/cart.util';\nimport { productRawPrice } from '../../utils/product.util';\n\nconst CartItem = ({\n  item,\n  index\n}) => {\n  const {\n    useCart: [cart, setCart],\n    useToast: [toast, setToast],\n    useModal: [modal, setModal]\n  } = useAppHooks();\n  const {\n    0: quantity,\n    1: setQuantity\n  } = useState(item.quantity);\n\n  const handleClick = index => {\n    const updatedCart = removeItemFromCart(cart, index);\n    setCart(updatedCart);\n    setToast({\n      title: \"Notification\",\n      body: \"You successfully removed this product from your cart\",\n      role: \"success\"\n    });\n  };\n\n  const handleQuantity = (index, method) => {\n    let newQuantity = method === \"dec\" ? quantity - 1 : quantity + 1;\n    setQuantity(newQuantity);\n    const updatedCart = updateCartByIndex(cart, index, newQuantity);\n    setCart(updatedCart);\n  };\n\n  return __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(\"th\", {\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"badge badge-danger\",\n    onClick: () => setModal({\n      dismiss: \"Cancel\",\n      title: \"Confirm action\",\n      body: \"Do you really want to remove this item ?\",\n      action: {\n        method: () => handleClick(index),\n        text: \"Remove\",\n        role: \"danger\"\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"x\")), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    as: `/product/${item.productVariation.id}`,\n    href: \"/product/[id]\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    className: \"text-white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, item.productVariation.name))), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, item.variation)), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, productRawPrice(item.productVariation.price), \" \\u20AC\"), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    className: `btn btn-light btn-sm`,\n    onClick: () => handleQuantity(index, \"dec\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"-\"), __jsx(\"span\", {\n    className: `px-3`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, quantity), __jsx(\"button\", {\n    className: `btn btn-light btn-sm`,\n    onClick: () => handleQuantity(index, \"inc\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"+\")), __jsx(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, item.totalPrice, \" \\u20AC\"));\n};\n\nexport default CartItem;","map":{"version":3,"sources":["/home/yamakasi/nextjs/woo-next/components/cart/CartItem.js"],"names":["Link","useState","useAppHooks","updateCartByIndex","removeItemFromCart","productRawPrice","CartItem","item","index","useCart","cart","setCart","useToast","toast","setToast","useModal","modal","setModal","quantity","setQuantity","handleClick","updatedCart","title","body","role","handleQuantity","method","newQuantity","dismiss","action","text","productVariation","id","name","variation","price","totalPrice"],"mappings":"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","sourcesContent":["import Link from 'next/link'\nimport { useState } from 'react'\nimport { useAppHooks } from '../../context/AppContext'\nimport { updateCartByIndex, removeItemFromCart } from '../../utils/cart.util'\nimport { productRawPrice } from '../../utils/product.util'\n\nconst CartItem = ({ item, index }) => {\n    const {\n        useCart: [cart, setCart],\n        useToast: [toast, setToast],\n        useModal: [modal, setModal]\n    } = useAppHooks()\n    const [quantity, setQuantity] = useState(item.quantity)\n\n    const handleClick = index => {\n        const updatedCart = removeItemFromCart(cart, index)\n        setCart(updatedCart)\n        setToast({\n            title: \"Notification\",\n            body: \"You successfully removed this product from your cart\",\n            role: \"success\"\n        })\n    }\n\n    const handleQuantity = (index, method) => {\n        let newQuantity = method === \"dec\" ? quantity - 1 : quantity + 1\n        setQuantity(newQuantity)\n        const updatedCart = updateCartByIndex(cart, index, newQuantity)\n        setCart(updatedCart)\n    }\n\n  return (\n    <tr>\n        <th scope=\"row\">\n            <span\n                className=\"badge badge-danger\"\n                onClick={() => setModal({\n                    dismiss: \"Cancel\",\n                    title: \"Confirm action\",\n                    body: \"Do you really want to remove this item ?\",\n                    action: {\n                        method: () => handleClick(index),\n                        text: \"Remove\",\n                        role: \"danger\"\n                    }\n                })}\n            >\n                x\n            </span>\n        </th>\n        <th>\n            <Link as={`/product/${item.productVariation.id}`} href=\"/product/[id]\">\n                <a className=\"text-white\">{item.productVariation.name}</a>\n            </Link>\n        </th>\n        <th>\n            <strong>{item.variation}</strong>\n        </th>\n        <th>{productRawPrice(item.productVariation.price)} €</th>\n        <th>\n            <button className={`btn btn-light btn-sm`} onClick={() => handleQuantity(index, \"dec\")}>-</button>\n            <span className={`px-3`}>{quantity}</span>\n            <button className={`btn btn-light btn-sm`} onClick={() => handleQuantity(index, \"inc\")}>+</button>\n        </th>\n        <th>{item.totalPrice} €</th>\n    </tr>\n  )\n}\n\nexport default CartItem\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/yamakasi/nextjs/woo-next/pages/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport gql from \"graphql-tag\";\nimport fetch from \"isomorphic-unfetch\";\nimport clientConfig from '../client-config/config';\nimport Products from '../components/products/Products';\nimport \"../style.css\";\nimport client from '../apolloClient';\nconst PRODUCTS_QUERY = gql`query{\n  products(first: 20) {\n    nodes {\n      ... on VariableProduct {\n        name\n        price\n        productId\n        shortDescription\n        stockQuantity\n        id\n        slug\n        image {\n          altText\n          sourceUrl\n        }\n      }\n    }\n  }\n}`;\n\nconst IndexPage = ({\n  products\n}) => {\n  return __jsx(Products, {\n    products: products,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  });\n};\n\nIndexPage.getInitialProps = async () => {\n  // const res = await fetch(`${clientConfig.siteUrl}/products`)\n  // const products = await res.json()\n  const {\n    data: {\n      products\n    }\n  } = await client.query({\n    query: PRODUCTS_QUERY\n  }); // console.log(products)\n\n  return {\n    products: products.nodes\n  };\n};\n\nexport default IndexPage;","map":{"version":3,"sources":["/home/yamakasi/nextjs/woo-next/pages/index.js"],"names":["React","gql","fetch","clientConfig","Products","client","PRODUCTS_QUERY","IndexPage","products","getInitialProps","data","query","nodes"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,MAAMC,cAAc,GAAGL,GAAI;;;;;;;;;;;;;;;;;;EAA3B;;AAoBA,MAAMM,SAAS,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAChC,SACE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAEA,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAGD,CAJD;;AAMAD,SAAS,CAACE,eAAV,GAA4B,YAAY;AACtC;AACA;AACA,QAAM;AAACC,IAAAA,IAAI,EAAE;AAACF,MAAAA;AAAD;AAAP,MAAqB,MAAMH,MAAM,CAACM,KAAP,CAAa;AAAEA,IAAAA,KAAK,EAAEL;AAAT,GAAb,CAAjC,CAHsC,CAItC;;AACA,SAAO;AAAEE,IAAAA,QAAQ,EAAEA,QAAQ,CAACI;AAArB,GAAP;AACD,CAND;;AAQA,eAAeL,SAAf","sourcesContent":["import React from 'react'\nimport gql from \"graphql-tag\"\nimport fetch from \"isomorphic-unfetch\"\nimport clientConfig from '../client-config/config'\nimport Products from '../components/products/Products'\nimport \"../style.css\"\nimport client from '../apolloClient'\n\nconst PRODUCTS_QUERY = gql`query{\n  products(first: 20) {\n    nodes {\n      ... on VariableProduct {\n        name\n        price\n        productId\n        shortDescription\n        stockQuantity\n        id\n        slug\n        image {\n          altText\n          sourceUrl\n        }\n      }\n    }\n  }\n}`\n\nconst IndexPage = ({products}) => {\n  return (\n    <Products products={products} />\n  )\n}\n\nIndexPage.getInitialProps = async () => {\n  // const res = await fetch(`${clientConfig.siteUrl}/products`)\n  // const products = await res.json()\n  const {data: {products}} = await client.query({ query: PRODUCTS_QUERY })\n  // console.log(products)\n  return { products: products.nodes }\n}\n\nexport default IndexPage\n"]},"metadata":{},"sourceType":"module"}
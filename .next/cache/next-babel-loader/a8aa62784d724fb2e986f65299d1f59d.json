{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/home/yamakasi/nextjs/woo-next/pages/index.js\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"query{\\n  products(first: 20) {\\n    nodes {\\n      ... on VariableProduct {\\n        name\\n        price\\n        productId\\n        shortDescription\\n        stockQuantity\\n        id\\n        slug\\n        image {\\n          altText\\n          sourceUrl\\n        }\\n      }\\n    }\\n  }\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport Layout from '../components/layout/Layout';\nimport gql from \"graphql-tag\";\nimport fetch from \"isomorphic-unfetch\";\nimport clientConfig from '../client-config/config';\nimport Products from '../components/products/Products';\nimport \"../style.css\";\nimport client from '../apolloClient';\nvar PRODUCTS_QUERY = gql(_templateObject());\n\nvar IndexPage = function IndexPage(_ref) {\n  var products = _ref.products;\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(Products, {\n    products: products,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n};\n\n_c = IndexPage;\nIndexPage.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var _yield$client$query, products;\n\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return client.query({\n            query: PRODUCTS_QUERY\n          });\n\n        case 2:\n          _yield$client$query = _context.sent;\n          products = _yield$client$query.data.products;\n          return _context.abrupt(\"return\", {\n            products: products.nodes\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"sources":["/home/yamakasi/nextjs/woo-next/pages/index.js"],"names":["React","Layout","gql","fetch","clientConfig","Products","client","PRODUCTS_QUERY","IndexPage","products","getInitialProps","query","data","nodes"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAO,cAAP;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,IAAMC,cAAc,GAAGL,GAAH,mBAApB;;AAoBA,IAAMM,SAAS,GAAG,SAAZA,SAAY,OAAgB;AAAA,MAAdC,QAAc,QAAdA,QAAc;AAChC,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAEA,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAND;;KAAMD,S;AAQNA,SAAS,CAACE,eAAV,yEAA4B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAGOJ,MAAM,CAACK,KAAP,CAAa;AAAEA,YAAAA,KAAK,EAAEJ;AAAT,WAAb,CAHP;;AAAA;AAAA;AAGZE,UAAAA,QAHY,uBAGnBG,IAHmB,CAGZH,QAHY;AAAA,2CAKnB;AAAEA,YAAAA,QAAQ,EAAEA,QAAQ,CAACI;AAArB,WALmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;AAQA,eAAeL,SAAf","sourcesContent":["import React from 'react'\nimport Layout from '../components/layout/Layout'\nimport gql from \"graphql-tag\"\nimport fetch from \"isomorphic-unfetch\"\nimport clientConfig from '../client-config/config'\nimport Products from '../components/products/Products'\nimport \"../style.css\"\nimport client from '../apolloClient'\n\nconst PRODUCTS_QUERY = gql`query{\n  products(first: 20) {\n    nodes {\n      ... on VariableProduct {\n        name\n        price\n        productId\n        shortDescription\n        stockQuantity\n        id\n        slug\n        image {\n          altText\n          sourceUrl\n        }\n      }\n    }\n  }\n}`\n\nconst IndexPage = ({products}) => {\n  return (\n    <Layout>\n      <Products products={products} />\n    </Layout>\n  )\n}\n\nIndexPage.getInitialProps = async () => {\n  // const res = await fetch(`${clientConfig.siteUrl}/products`)\n  // const products = await res.json()\n  const {data: {products}} = await client.query({ query: PRODUCTS_QUERY })\n  // console.log(products)\n  return { products: products.nodes }\n}\n\nexport default IndexPage\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/yamakasi/nextjs/woo-next/components/cart/CartItem.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useEffect, useState } from 'react';\nimport { useAppHooks } from '../../context/AppContext';\nimport { updateCartItemByIndex, removeItemFromCart } from '../../utils/cart.util';\nimport { productRawPrice } from '../../utils/product.util';\n\nvar CartItem = function CartItem(_ref) {\n  _s();\n\n  var item = _ref.item,\n      index = _ref.index;\n\n  var _useAppHooks = useAppHooks(),\n      _useAppHooks$useCart = _slicedToArray(_useAppHooks.useCart, 2),\n      cart = _useAppHooks$useCart[0],\n      setCart = _useAppHooks$useCart[1],\n      _useAppHooks$useToast = _slicedToArray(_useAppHooks.useToast, 2),\n      toast = _useAppHooks$useToast[0],\n      setToast = _useAppHooks$useToast[1];\n\n  var _useState = useState(item.quantity || 0),\n      quantity = _useState[0],\n      setQuantity = _useState[1];\n\n  var handleClick = function handleClick(index) {\n    var updatedCart = removeItemFromCart(cart, index);\n    setToast({\n      title: \"Notification\",\n      body: \"You successfully removed this product from your cart\",\n      role: \"success\"\n    });\n    setCart(updatedCart);\n  };\n\n  var handleChange = function handleChange(quantity, index) {\n    if (index > -1) {\n      var updatedCart = updateCartItemByIndex(cart, index, quantity); // console.log(updatedCart)\n\n      setCart(updatedCart);\n    }\n\n    setQuantity(quantity);\n  }; // useEffect(() => {\n  //     if (index > -1) {\n  //         const updatedCart = updateCartItemByIndex(cart, index, quantity)\n  //         console.log(updatedCart)\n  //         setCart(updatedCart)\n  //     }\n  // }, [quantity])\n\n\n  return __jsx(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(\"th\", {\n    scope: \"row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    className: \"badge badge-danger\",\n    onClick: function onClick() {\n      return handleClick(index);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"x\")), __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    as: \"/product/\".concat(item.productVariation.id),\n    href: \"/product/[id]\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    className: \"text-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, item.productVariation.name))), __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(\"strong\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, item.variation)), __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, productRawPrice(item.productVariation.price), \" \\u20AC\"), __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"number\",\n    value: quantity,\n    onChange: function onChange(e) {\n      return handleChange(+e.target.value, index);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  })), __jsx(\"th\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, item.totalPrice, \" \\u20AC\"));\n};\n\n_s(CartItem, \"BzY6cjaBC8pVz4C1nIAtjXI3SVo=\", false, function () {\n  return [useAppHooks];\n});\n\n_c = CartItem;\nexport default CartItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartItem\");","map":{"version":3,"sources":["/home/yamakasi/nextjs/woo-next/components/cart/CartItem.js"],"names":["Link","useEffect","useState","useAppHooks","updateCartItemByIndex","removeItemFromCart","productRawPrice","CartItem","item","index","useCart","cart","setCart","useToast","toast","setToast","quantity","setQuantity","handleClick","updatedCart","title","body","role","handleChange","productVariation","id","name","variation","price","e","target","value","totalPrice"],"mappings":"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","sourcesContent":["import Link from 'next/link'\nimport { useEffect, useState } from 'react'\nimport { useAppHooks } from '../../context/AppContext'\nimport { updateCartItemByIndex, removeItemFromCart } from '../../utils/cart.util'\nimport { productRawPrice } from '../../utils/product.util'\n\nconst CartItem = ({ item, index }) => {\n    const {\n        useCart: [cart, setCart],\n        useToast: [toast, setToast]\n    } = useAppHooks()\n    const [quantity, setQuantity] = useState(item.quantity || 0)\n\n    const handleClick = index => {\n        const updatedCart = removeItemFromCart(cart, index)\n        setToast({\n            title: \"Notification\",\n            body: \"You successfully removed this product from your cart\",\n            role: \"success\"\n        })\n        setCart(updatedCart)\n    }\n\n    const handleChange = (quantity, index) => {\n        if (index > -1) {\n            const updatedCart = updateCartItemByIndex(cart, index, quantity)\n            // console.log(updatedCart)\n            setCart(updatedCart)\n        }\n        setQuantity(quantity)\n    }\n\n    // useEffect(() => {\n    //     if (index > -1) {\n    //         const updatedCart = updateCartItemByIndex(cart, index, quantity)\n    //         console.log(updatedCart)\n    //         setCart(updatedCart)\n    //     }\n    // }, [quantity])\n\n  return (\n    <tr>\n        <th scope=\"row\">\n            <span\n                className=\"badge badge-danger\"\n                onClick={() => handleClick(index)}\n            >\n                x\n            </span>\n        </th>\n        <th>\n            <Link as={`/product/${item.productVariation.id}`} href=\"/product/[id]\">\n                <a className=\"text-white\">{item.productVariation.name}</a>\n            </Link>\n        </th>\n        <th>\n            <strong>{item.variation}</strong>\n        </th>\n        <th>{productRawPrice(item.productVariation.price)} €</th>\n        <th>\n            <input\n                type=\"number\"\n                value={quantity}\n                  onChange={e => handleChange(+e.target.value, index)}\n            />\n        </th>\n        <th>{item.totalPrice} €</th>\n    </tr>\n  )\n}\n\nexport default CartItem\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { productRawPrice } from \"./product.util\";\nexport const getCart = () => {\n  if (localStorage) {\n    return JSON.parse(localStorage.getItem(\"woo-next-cart\"));\n  }\n\n  return null;\n};\nexport const createCart = (product, quantity, variationValue) => {\n  let rawPrice = productRawPrice(product.price);\n  let indexVariation = product.variations.nodes.findIndex(variation => variation.attributes.nodes[0].value === variationValue);\n\n  if (indexVariation > -1) {\n    const newProduct = {\n      quantity,\n      totalPrice: parseFloat((quantity * rawPrice).toFixed(2)),\n      variation: variationValue,\n      productVariation: product\n    };\n    const items = [newProduct];\n    const newCart = {\n      items,\n      totalProductsCount: 1,\n      totalProductsPrice: newProduct.totalPrice\n    };\n    localStorage.setItem(\"woo-next-cart\", JSON.stringify(newCart));\n    return newCart;\n  }\n\n  return null;\n};\nexport const updateCart = (cart, index, quantity, variationValue) => {\n  let rawPrice = parseFloat(product.price.replace(\",\", \".\").substring(1));\n\n  if (index > -1) {\n    cart.items[index].quantity += quantity;\n    cart.items[index].totalPrice = parseFloat((rawPrice * cart.items[isProductMatchIndex].quantity).toFixed(2));\n    cart.totalProductsPrice = cart.items.reduce((acc, item) => acc + parseFloat(item.totalPrice), 0);\n    localStorage.setItem(\"woo-next-cart\", JSON.stringify(cart));\n    return cart;\n  } else {\n    let items = [...cart.items, {\n      quantity,\n      totalPrice: (quantity * rawPrice).toFixed(2),\n      productVariation: product,\n      variation: variationValue\n    }];\n    const updatedCart = {\n      totalProductsPrice: items.reduce((acc, item) => acc + parseFloat(item.totalPrice), 0),\n      totalProductsCount: cart.totalProductsCount + 1,\n      items\n    };\n    localStorage.setItem(\"woo-next-cart\", JSON.stringify(updatedCart));\n    return updatedCart;\n  }\n};\nexport const removeItemFromCart = (cart, indexProduct) => {\n  console.log(cart);\n\n  if (cart.totalProductsCount - 1 === indexProduct) {\n    localStorage.removeItem(\"woo-next-cart\");\n    return null;\n  }\n\n  const updatedCart = {\n    items: cart.items.filter((item, index) => index !== indexProduct),\n    totalProductsCount: cart.totalProductsCount - 1,\n    totalProductsPrice: cart.totalProductsPrice - cart.items[indexProduct].totalPrice\n  };\n  localStorage.setItem(\"woo-next-cart\", JSON.stringify(updatedCart));\n  return updatedCart;\n};","map":{"version":3,"sources":["/home/yamakasi/nextjs/woo-next/utils/cart.util.js"],"names":["productRawPrice","getCart","localStorage","JSON","parse","getItem","createCart","product","quantity","variationValue","rawPrice","price","indexVariation","variations","nodes","findIndex","variation","attributes","value","newProduct","totalPrice","parseFloat","toFixed","productVariation","items","newCart","totalProductsCount","totalProductsPrice","setItem","stringify","updateCart","cart","index","replace","substring","isProductMatchIndex","reduce","acc","item","updatedCart","removeItemFromCart","indexProduct","console","log","removeItem","filter"],"mappings":"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","sourcesContent":["import { productRawPrice } from \"./product.util\"\n\nexport const getCart = () => {\n    if (localStorage) {\n        return JSON.parse(localStorage.getItem(\"woo-next-cart\"))\n    }\n    return null\n}\n\nexport const createCart = (product, quantity, variationValue) => {\n    let rawPrice = productRawPrice(product.price)\n    let indexVariation = product.variations.nodes.findIndex(variation => variation.attributes.nodes[0].value === variationValue)\n    if (indexVariation > -1) {\n        const newProduct = {\n            quantity,\n            totalPrice: parseFloat((quantity * rawPrice).toFixed(2)),\n            variation: variationValue,\n            productVariation: product\n        }\n        const items = [newProduct]\n        const newCart = {\n            items,\n            totalProductsCount: 1,\n            totalProductsPrice: newProduct.totalPrice,\n        }\n        localStorage.setItem(\"woo-next-cart\", JSON.stringify(newCart))\n        return newCart\n    }\n    return null\n}\n\nexport const updateCart = (cart, index, quantity, variationValue) => {\n    let rawPrice = parseFloat(product.price.replace(\",\", \".\").substring(1))\n    if (index > -1) {\n        cart.items[index].quantity += quantity\n        cart.items[index].totalPrice = parseFloat((rawPrice * cart.items[isProductMatchIndex].quantity).toFixed(2))\n        cart.totalProductsPrice = cart.items.reduce((acc, item) => acc + parseFloat(item.totalPrice), 0)\n        localStorage.setItem(\"woo-next-cart\", JSON.stringify(cart))\n        return cart\n    }\n    else {\n        let items = [\n            ...cart.items,\n            {\n                quantity,\n                totalPrice: (quantity * rawPrice).toFixed(2),\n                productVariation: product,\n                variation: variationValue\n            }                           \n        ]\n\n        const updatedCart = {\n            totalProductsPrice: items.reduce((acc, item) => acc + parseFloat(item.totalPrice), 0),\n            totalProductsCount: cart.totalProductsCount + 1,\n            items\n        }\n        localStorage.setItem(\"woo-next-cart\", JSON.stringify(updatedCart))\n        return updatedCart\n    }\n}\n\nexport const removeItemFromCart = (cart, indexProduct) => {\n    console.log(cart)\n    if (cart.totalProductsCount - 1 === indexProduct) {\n        localStorage.removeItem(\"woo-next-cart\")\n        return null\n    }\n    const updatedCart = {\n        items: cart.items.filter((item, index) => index !== indexProduct),\n        totalProductsCount: cart.totalProductsCount - 1,\n        totalProductsPrice: cart.totalProductsPrice - cart.items[indexProduct].totalPrice\n    }\n    localStorage.setItem(\"woo-next-cart\", JSON.stringify(updatedCart))\n    return updatedCart\n}"]},"metadata":{},"sourceType":"module"}
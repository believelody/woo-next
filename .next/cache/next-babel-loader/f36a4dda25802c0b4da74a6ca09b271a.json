{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/yamakasi/nextjs/woo-next/context/AppContext.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { getCart } from '../utils/cart.util';\nexport var AppContext = /*#__PURE__*/React.createContext([{}, function () {}]);\nexport var AppProvider = function AppProvider(props) {\n  _s();\n\n  var _useState = useState(null),\n      cart = _useState[0],\n      setCart = _useState[1];\n\n  useEffect(function () {\n    if (true) {\n      if (cart && getCart() && cart !== getCart()) {\n        setCart(getCart);\n      }\n    }\n  }, [cart]);\n  return __jsx(AppContext.Provider, {\n    value: [cart, setCart],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, props.children);\n};\n\n_s(AppProvider, \"GFK0CC7GMGqGCJ6zwyfFVjZxPPc=\");\n\n_c = AppProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["/home/yamakasi/nextjs/woo-next/context/AppContext.js"],"names":["React","useState","useEffect","getCart","AppContext","createContext","AppProvider","props","cart","setCart","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,OAAO,IAAMC,UAAU,gBAAGJ,KAAK,CAACK,aAAN,CAAoB,CAC1C,EAD0C,EAE1C,YAAM,CAAE,CAFkC,CAApB,CAAnB;AAKP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAAA;;AAAA,kBACRN,QAAQ,CAAC,IAAD,CADA;AAAA,MACzBO,IADyB;AAAA,MACnBC,OADmB;;AAGhCP,EAAAA,SAAS,CAAC,YAAM;AACZ,cAAqB;AACjB,UAAIM,IAAI,IAAIL,OAAO,EAAf,IAAqBK,IAAI,KAAKL,OAAO,EAAzC,EAA6C;AACzCM,QAAAA,OAAO,CAACN,OAAD,CAAP;AACH;AACJ;AACJ,GANQ,EAMN,CAACK,IAAD,CANM,CAAT;AAQA,SACI,MAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE,CAACA,IAAD,EAAOC,OAAP,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACG,QADX,CADJ;AAKH,CAhBM;;GAAMJ,W;;KAAAA,W","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { getCart } from '../utils/cart.util'\n\nexport const AppContext = React.createContext([\n    {},\n    () => {}\n])\n\nexport const AppProvider = props => {\n    const [cart, setCart] = useState(null)\n\n    useEffect(() => {\n        if (process.browser) {\n            if (cart && getCart() && cart !== getCart()) {\n                setCart(getCart)\n            }\n        }\n    }, [cart])\n\n    return (\n        <AppContext.Provider value={[cart, setCart]}>\n            {props.children}\n        </AppContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}
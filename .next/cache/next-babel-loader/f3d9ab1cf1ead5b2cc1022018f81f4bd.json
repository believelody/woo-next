{"ast":null,"code":"export const getCart = () => {\n  if (localStorage && localStorage.getItem(\"woo-next-cart\")) {\n    return JSON.parse(localStorage.getItem(\"woo-next-cart\"));\n  }\n\n  return null;\n};\nexport const createCart = (product, quantity, variationValue) => {\n  let rawPrice = parseFloat(product.price.replace(\",\", \".\").substring(1));\n  let indexVariation = product.variations.nodes.findIndex(variation => variation.attributes.nodes[0].value === variationValue);\n\n  if (indexVariation > -1) {\n    const newProduct = {\n      quantity,\n      totalPrice: parseFloat((quantity * rawPrice).toFixed(2)),\n      variation: variationValue,\n      productVariation: product\n    };\n    const items = [newProduct];\n    const newCart = {\n      items,\n      totalProductsCount: 1,\n      totalProductsPrice: newProduct.totalPrice\n    };\n    localStorage.setItem(\"woo-next-cart\", JSON.stringify(newCart));\n  }\n\n  return null;\n};\nexport const updateCart = (cart, product, quantity, variationValue) => {\n  const isProductMatchIndex = cart.items.findIndex(item => item.variation === variationValue);\n  let rawPrice = parseFloat(product.price.replace(\",\", \".\").substring(1));\n\n  if (isProductMatchIndex > -1) {\n    cart.items[isProductMatchIndex].quantity += quantity;\n    cart.items[isProductMatchIndex].totalPrice = parseFloat((rawPrice * cart.items[isProductMatchIndex].quantity).toFixed(2));\n    cart.totalProductsPrice = cart.items.reduce((acc, item) => acc + parseFloat(item.totalPrice), 0);\n    localStorage.setItem(\"woo-next-cart\", JSON.stringify(cart));\n    return cart;\n  } else {\n    let items = [...cart.items, {\n      quantity,\n      totalPrice: (quantity * rawPrice).toFixed(2),\n      productVariation: product,\n      variation: variationValue\n    }];\n    const updatedCart = {\n      totalProductsPrice: items.reduce((acc, item) => acc + parseFloat(item.totalPrice), 0),\n      totalProductsCount: cart.totalProductsCount + 1,\n      items\n    };\n    localStorage.setItem(\"woo-next-cart\", JSON.stringify(updatedCart));\n    return updatedCart;\n  }\n};\nexport const removeItemFromCart = (cart, indexProduct) => {\n  const updatedCart = {\n    items: cart.items.filter((item, index) => index !== indexProduct),\n    totalProductsCount: cart.totalProductsCount - 1,\n    totalProductsPrice: cart.totalPrice - cart.items[indexProduct].totalPrice\n  };\n  localStorage.setItem(\"woo-next-cart\", JSON.stringify(updatedCart));\n  return updatedCart;\n};","map":{"version":3,"sources":["/home/yamakasi/nextjs/woo-next/utils/cart.util.js"],"names":["getCart","localStorage","getItem","JSON","parse","createCart","product","quantity","variationValue","rawPrice","parseFloat","price","replace","substring","indexVariation","variations","nodes","findIndex","variation","attributes","value","newProduct","totalPrice","toFixed","productVariation","items","newCart","totalProductsCount","totalProductsPrice","setItem","stringify","updateCart","cart","isProductMatchIndex","item","reduce","acc","updatedCart","removeItemFromCart","indexProduct","filter","index"],"mappings":"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","sourcesContent":["export const getCart = () => {\n    if (localStorage && localStorage.getItem(\"woo-next-cart\")) {\n        return JSON.parse(localStorage.getItem(\"woo-next-cart\"))\n    }\n    return null\n}\n\nexport const createCart = (product, quantity, variationValue) => {\n    let rawPrice = parseFloat(product.price.replace(\",\", \".\").substring(1))\n    let indexVariation = product.variations.nodes.findIndex(variation => variation.attributes.nodes[0].value === variationValue)\n    if (indexVariation > -1) {\n        const newProduct = {\n            quantity,\n            totalPrice: parseFloat((quantity * rawPrice).toFixed(2)),\n            variation: variationValue,\n            productVariation: product\n        }\n        const items = [newProduct]\n        const newCart = {\n            items,\n            totalProductsCount: 1,\n            totalProductsPrice: newProduct.totalPrice,\n        }\n        localStorage.setItem(\"woo-next-cart\", JSON.stringify(newCart))\n    }\n    return null\n}\n\nexport const updateCart = (cart, product, quantity, variationValue) => {\n    const isProductMatchIndex = cart.items.findIndex(item => item.variation === variationValue)\n    let rawPrice = parseFloat(product.price.replace(\",\", \".\").substring(1))\n    if (isProductMatchIndex > -1) {\n        cart.items[isProductMatchIndex].quantity += quantity\n        cart.items[isProductMatchIndex].totalPrice = parseFloat((rawPrice * cart.items[isProductMatchIndex].quantity).toFixed(2))\n        cart.totalProductsPrice = cart.items.reduce((acc, item) => acc + parseFloat(item.totalPrice), 0)\n        localStorage.setItem(\"woo-next-cart\", JSON.stringify(cart))\n        return cart\n    }\n    else {\n        let items = [\n            ...cart.items,\n            {\n                quantity,\n                totalPrice: (quantity * rawPrice).toFixed(2),\n                productVariation: product,\n                variation: variationValue\n            }\n        ]\n\n        const updatedCart = {\n            totalProductsPrice: items.reduce((acc, item) => acc + parseFloat(item.totalPrice), 0),\n            totalProductsCount: cart.totalProductsCount + 1,\n            items\n        }\n        localStorage.setItem(\"woo-next-cart\", JSON.stringify(updatedCart))\n        return updatedCart\n    }\n}\n\nexport const removeItemFromCart = (cart, indexProduct) => {\n    const updatedCart = {\n        items: cart.items.filter((item, index) => index !== indexProduct),\n        totalProductsCount: cart.totalProductsCount - 1,\n        totalProductsPrice: cart.totalPrice - cart.items[indexProduct].totalPrice\n    }\n    localStorage.setItem(\"woo-next-cart\", JSON.stringify(updatedCart))\n    return updatedCart\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport var createCart = function createCart(product, quantity, variationValue) {\n  var rawPrice = parseFloat(product.price.replace(\",\", \".\").substring(1));\n  var indexVariation = product.variations.nodes.findIndex(function (variation) {\n    return variation.attributes.nodes[0].value === variationValue;\n  });\n\n  if (indexVariation > -1) {\n    return [{\n      quantity: quantity,\n      totalPrice: (quantity * rawPrice).toFixed(2),\n      variation: variationValue,\n      productVariation: product\n    }];\n  }\n\n  return null;\n};\nexport var updateCart = function updateCart(cart, product, quantity, variationValue) {\n  console.log(product);\n  var isProductMatch = cart.find(function (item) {\n    return item.productVariation.id === product.id;\n  });\n  var isVariationMatch = isProductMatch && isProductMatch.variation === variationValue;\n  var indexVariation = isProductMatch ? isProductMatch.productVariation.variations.nodes.findIndex(function (variation) {\n    return variation.attributes.nodes[0].value === variationValue;\n  }) : product.variations.nodes.findIndex(function (variation) {\n    return variation.attributes.nodes[0].value === variationValue;\n  });\n  var rawPrice = parseFloat(product.price.replace(\",\", \".\").substring(1));\n\n  if (indexVariation > -1) {\n    if (isVariationMatch) {\n      return [].concat(_toConsumableArray(cart), [_objectSpread({\n        quantity: isProductMatch.quantity + quantity\n      }, isProductMatch)]);\n    } else {\n      return [].concat(_toConsumableArray(cart), [{\n        quantity: quantity,\n        totalPrice: (quantity * rawPrice).toFixed(2),\n        productVariation: product,\n        variation: variationValue\n      }]);\n    }\n  }\n\n  return null;\n};","map":{"version":3,"sources":["/home/yamakasi/nextjs/woo-next/utils/cart.util.js"],"names":["createCart","product","quantity","variationValue","rawPrice","parseFloat","price","replace","substring","indexVariation","variations","nodes","findIndex","variation","attributes","value","totalPrice","toFixed","productVariation","updateCart","cart","console","log","isProductMatch","find","item","id","isVariationMatch"],"mappings":";;;;;;;AAAA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD,EAAUC,QAAV,EAAoBC,cAApB,EAAuC;AAC7D,MAAIC,QAAQ,GAAGC,UAAU,CAACJ,OAAO,CAACK,KAAR,CAAcC,OAAd,CAAsB,GAAtB,EAA2B,GAA3B,EAAgCC,SAAhC,CAA0C,CAA1C,CAAD,CAAzB;AACA,MAAIC,cAAc,GAAGR,OAAO,CAACS,UAAR,CAAmBC,KAAnB,CAAyBC,SAAzB,CAAmC,UAAAC,SAAS;AAAA,WAAIA,SAAS,CAACC,UAAV,CAAqBH,KAArB,CAA2B,CAA3B,EAA8BI,KAA9B,KAAwCZ,cAA5C;AAAA,GAA5C,CAArB;;AACA,MAAIM,cAAc,GAAG,CAAC,CAAtB,EAAyB;AACrB,WAAO,CACH;AACIP,MAAAA,QAAQ,EAARA,QADJ;AAEIc,MAAAA,UAAU,EAAE,CAACd,QAAQ,GAAGE,QAAZ,EAAsBa,OAAtB,CAA8B,CAA9B,CAFhB;AAGIJ,MAAAA,SAAS,EAAEV,cAHf;AAIIe,MAAAA,gBAAgB,EAAEjB;AAJtB,KADG,CAAP;AAQH;;AACD,SAAO,IAAP;AACH,CAdM;AAgBP,OAAO,IAAMkB,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAOnB,OAAP,EAAgBC,QAAhB,EAA0BC,cAA1B,EAA6C;AACnEkB,EAAAA,OAAO,CAACC,GAAR,CAAYrB,OAAZ;AACA,MAAMsB,cAAc,GAAGH,IAAI,CAACI,IAAL,CAAU,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACP,gBAAL,CAAsBQ,EAAtB,KAA6BzB,OAAO,CAACyB,EAAzC;AAAA,GAAd,CAAvB;AACA,MAAMC,gBAAgB,GAAGJ,cAAc,IAAIA,cAAc,CAACV,SAAf,KAA6BV,cAAxE;AACA,MAAIM,cAAc,GAAGc,cAAc,GAC/BA,cAAc,CAACL,gBAAf,CAAgCR,UAAhC,CAA2CC,KAA3C,CAAiDC,SAAjD,CAA2D,UAAAC,SAAS;AAAA,WAAIA,SAAS,CAACC,UAAV,CAAqBH,KAArB,CAA2B,CAA3B,EAA8BI,KAA9B,KAAwCZ,cAA5C;AAAA,GAApE,CAD+B,GAG/BF,OAAO,CAACS,UAAR,CAAmBC,KAAnB,CAAyBC,SAAzB,CAAmC,UAAAC,SAAS;AAAA,WAAIA,SAAS,CAACC,UAAV,CAAqBH,KAArB,CAA2B,CAA3B,EAA8BI,KAA9B,KAAwCZ,cAA5C;AAAA,GAA5C,CAHJ;AAIA,MAAIC,QAAQ,GAAGC,UAAU,CAACJ,OAAO,CAACK,KAAR,CAAcC,OAAd,CAAsB,GAAtB,EAA2B,GAA3B,EAAgCC,SAAhC,CAA0C,CAA1C,CAAD,CAAzB;;AACA,MAAIC,cAAc,GAAG,CAAC,CAAtB,EAAyB;AACrB,QAAIkB,gBAAJ,EAAsB;AAClB,0CACOP,IADP;AAGQlB,QAAAA,QAAQ,EAAEqB,cAAc,CAACrB,QAAf,GAA0BA;AAH5C,SAIWqB,cAJX;AAOH,KARD,MASK;AACD,0CACOH,IADP,IAEI;AACIlB,QAAAA,QAAQ,EAARA,QADJ;AAEIc,QAAAA,UAAU,EAAE,CAACd,QAAQ,GAAGE,QAAZ,EAAsBa,OAAtB,CAA8B,CAA9B,CAFhB;AAGIC,QAAAA,gBAAgB,EAAEjB,OAHtB;AAIIY,QAAAA,SAAS,EAAEV;AAJf,OAFJ;AASH;AACJ;;AACD,SAAO,IAAP;AACH,CAhCM","sourcesContent":["export const createCart = (product, quantity, variationValue) => {\n    let rawPrice = parseFloat(product.price.replace(\",\", \".\").substring(1))\n    let indexVariation = product.variations.nodes.findIndex(variation => variation.attributes.nodes[0].value === variationValue)\n    if (indexVariation > -1) {\n        return [\n            {\n                quantity,\n                totalPrice: (quantity * rawPrice).toFixed(2),\n                variation: variationValue,\n                productVariation: product\n            }\n        ]\n    }\n    return null\n}\n\nexport const updateCart = (cart, product, quantity, variationValue) => {\n    console.log(product)\n    const isProductMatch = cart.find(item => item.productVariation.id === product.id)\n    const isVariationMatch = isProductMatch && isProductMatch.variation === variationValue\n    let indexVariation = isProductMatch ? \n        isProductMatch.productVariation.variations.nodes.findIndex(variation => variation.attributes.nodes[0].value === variationValue)\n        :\n        product.variations.nodes.findIndex(variation => variation.attributes.nodes[0].value === variationValue)\n    let rawPrice = parseFloat(product.price.replace(\",\", \".\").substring(1))\n    if (indexVariation > -1) {\n        if (isVariationMatch) {\n            return [\n                ...cart,\n                {\n                    quantity: isProductMatch.quantity + quantity,\n                    ...isProductMatch\n                }\n            ]\n        }\n        else {\n            return [\n                ...cart,\n                {\n                    quantity,\n                    totalPrice: (quantity * rawPrice).toFixed(2),\n                    productVariation: product,\n                    variation: variationValue\n                }\n            ]\n        }\n    }\n    return null\n}"]},"metadata":{},"sourceType":"module"}
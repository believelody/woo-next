{"ast":null,"code":"var _jsxFileName = \"/home/yamakasi/nextjs/woo-next/components/cart/AddToCartBtn.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useAppHooks } from \"../../context/AppContext\";\nimport { createCart, productInCart, updateCartByIndex, updateCartWithNewProduct } from \"../../utils/cart.util\";\n\nconst AddToCartBtn = ({\n  product,\n  variationValue,\n  quantity,\n  setQuantity,\n  setVariationValue\n}) => {\n  const {\n    useCart: [cart, setCart],\n    useToast: [toast, setToast]\n  } = useAppHooks();\n\n  const updateBtnColor = () => {\n    if (variationValue && quantity > 0) {\n      return cart && productInCart(cart, product, variationValue) ? \"info\" : \"success\";\n    }\n\n    return \"dark\";\n  };\n\n  const updateBtnText = () => {\n    if (variationValue && quantity > 0) {\n      return cart && productInCart(cart, product, variationValue) ? \"UPDATE PRODUCT\" : \"ADD TO CART\";\n    }\n\n    return \"CHOOSE A VARIATION\";\n  };\n\n  const handleAddToCart = () => {\n    if (cart) {\n      let updatedCart;\n      const indexProduct = productInCart(cart, product, variationValue);\n\n      if (indexProduct > -1) {\n        updatedCart = updateCartByIndex(cart, indexProduct, quantity, variationValue);\n        setToast({\n          title: \"Notification\",\n          body: `You successfully updated ${product.name} variation to ${variationValue}`,\n          role: \"success\"\n        });\n      } else {\n        updatedCart = updateCartWithNewProduct(cart, product, quantity, variationValue);\n        setToast({\n          title: \"Notification\",\n          body: `You successfully added ${product.name}-${variationValue} in your cart`,\n          role: \"success\"\n        });\n      }\n\n      setCart(updatedCart);\n    } else {\n      const newCart = createCart(product, quantity, variationValue);\n      setCart(newCart);\n      setToast({\n        title: \"Notification\",\n        body: `You successfully added ${product.name}-${variationValue} in your cart`,\n        role: \"success\"\n      });\n    }\n\n    setQuantity(0);\n    setVariationValue(\"\");\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"button\", {\n    disabled: !variationValue || quantity === 0,\n    className: `btn btn-${updateBtnColor()} w-100 block`,\n    onClick: handleAddToCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, updateBtnText()));\n};\n\nexport default AddToCartBtn;","map":{"version":3,"sources":["/home/yamakasi/nextjs/woo-next/components/cart/AddToCartBtn.js"],"names":["useAppHooks","createCart","productInCart","updateCartByIndex","updateCartWithNewProduct","AddToCartBtn","product","variationValue","quantity","setQuantity","setVariationValue","useCart","cart","setCart","useToast","toast","setToast","updateBtnColor","updateBtnText","handleAddToCart","updatedCart","indexProduct","title","body","name","role","newCart"],"mappings":"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","sourcesContent":["import { useAppHooks } from \"../../context/AppContext\"\nimport { createCart, productInCart, updateCartByIndex, updateCartWithNewProduct } from \"../../utils/cart.util\"\n\nconst AddToCartBtn = ({ product, variationValue, quantity, setQuantity, setVariationValue }) => {\n    const {\n        useCart: [cart, setCart],\n        useToast: [toast, setToast]\n    } = useAppHooks()\n\n    const updateBtnColor = () => {\n        if (variationValue && quantity > 0) {\n            return cart && productInCart(cart, product, variationValue) ? \"info\" : \"success\"\n        }\n        return \"dark\"\n    }\n\n    const updateBtnText = () => {\n        if (variationValue && quantity > 0) {\n            return cart && productInCart(cart, product, variationValue) ? \"UPDATE PRODUCT\" : \"ADD TO CART\"\n        }\n        return \"CHOOSE A VARIATION\"\n    }\n\n    const handleAddToCart = () => {\n        if (cart) {\n            let updatedCart\n            const indexProduct = productInCart(cart, product, variationValue)\n            if (indexProduct > -1) {\n                updatedCart = updateCartByIndex(cart, indexProduct, quantity, variationValue)\n                setToast({\n                    title: \"Notification\",\n                    body: `You successfully updated ${product.name} variation to ${variationValue}`,\n                    role: \"success\"\n                })\n            }\n            else {\n                updatedCart = updateCartWithNewProduct(cart, product, quantity, variationValue)\n                setToast({\n                    title: \"Notification\",\n                    body: `You successfully added ${product.name}-${variationValue} in your cart`,\n                    role: \"success\"\n                })\n            }\n            setCart(updatedCart)\n        }\n        else {\n            const newCart = createCart(product, quantity, variationValue)\n            setCart(newCart)\n            setToast({\n                title: \"Notification\",\n                body: `You successfully added ${product.name}-${variationValue} in your cart`,\n                role: \"success\"\n            })\n        }\n        setQuantity(0)\n        setVariationValue(\"\")\n    }\n\n  return (\n      <>\n        <button\n            disabled={!variationValue || quantity === 0}\n            className={`btn btn-${updateBtnColor()} w-100 block`}\n            onClick={handleAddToCart}\n        >\n              {updateBtnText()}\n        </button>\n      </>\n  )\n}\n\nexport default AddToCartBtn"]},"metadata":{},"sourceType":"module"}